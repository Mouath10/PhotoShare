@model PhotoShare.Models.Photo

@{
    ViewData["Title"] = "Photo Details";
    var photoKey = $"photo-comments-{Model.PhotoId}"; // Unique key for comments
    var likeKey = $"photo-likes-{Model.PhotoId}"; // Unique key for likes
}

<div class="container mt-5">
    <div class="row">
        <div class="col-md-8 offset-md-2">
            <div class="card shadow-lg">
                <div class="card-body">
                    <!-- Image with Overlay -->
                    <div class="position-relative">
                        <img src="@Url.Content(string.IsNullOrEmpty(Model.ImageFilename) ? "https://source.unsplash.com/random/800x600" : $"/photos/{Model.ImageFilename}")"
                             alt="@Model.Description" class="img-fluid rounded w-100" />
                        <div class="position-absolute bottom-0 w-100 bg-dark text-white text-center py-2 opacity-75">
                            <h4>@Model.Description</h4>
                        </div>
                    </div>

                    <!-- Photo Details -->
                    <table class="table mt-4">
                        <tr><td><strong>ID:</strong></td><td>@Model.PhotoId</td></tr>
                        <tr><td><strong>Created:</strong></td><td>@Model.CreatedAt</td></tr>
                        <tr>
                            <td><strong>Tags:</strong></td>
                            <td>@(Model.Tags?.Any() ?? false ? string.Join(", ", Model.Tags.Select(t => t.Name)) : "No tags available")</td>
                        </tr>
                    </table>

                    <!-- Like & Actions -->
                    <div class="d-flex align-items-center mt-4">
                        <button class="btn btn-danger me-2" onclick="toggleLike()">
                            <i id="likeIcon" class="fa-regular fa-heart"></i>
                        </button>
                        <span id="likeCount" class="fw-bold">0</span> Likes
                    </div>
                    <div class="d-flex justify-content-between mt-4">
                        <a href="@Url.Content($"/photos/{Model.ImageFilename}")" class="btn btn-success" download>
                            <i class="fa-solid fa-download"></i> Download
                        </a>
                        <button class="btn btn-primary" onclick="sharePhoto()">
                            <i class="fa-solid fa-share"></i> Share
                        </button>
                    </div>

                    <!-- Comments -->
                    <div class="mt-5">
                        <h4>Comments</h4>
                        <textarea class="form-control" id="commentText" placeholder="Write a comment..." rows="3"></textarea>
                        <button class="btn btn-info mt-3" onclick="submitComment()">Submit</button>
                        <ul class="list-group mt-3" id="commentList"></ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Styles -->
<style>
    body {
        background-color: #f8f9fa;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .container {
        max-width: 1200px;
        margin: auto;
        padding: 20px;
    }

    .card {
        border: none;
        border-radius: 10px;
        transition: transform 0.3s;
    }

        .card:hover {
            transform: translateY(-5px);
        }

    .btn {
        border-radius: 5px;
        font-size: 14px;
        font-weight: 600;
        transition: transform 0.2s, box-shadow 0.2s;
    }

        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        }

    .btn-danger:hover {
        background-color: #c82333;
    }

    .btn-success:hover {
        background-color: #218838;
    }

    .btn-primary:hover {
        background-color: #0056b3;
    }

    .btn-info:hover {
        background-color: #138496;
    }

    .list-group-item {
        border: none;
        border-bottom: 1px solid #eee;
        padding: 15px;
    }
</style>

<!-- JavaScript -->
<script>
    const photoKey = "@photoKey", likeKey = "@likeKey";

    function updateUI(id, value, liked = false) {
        document.getElementById(id).textContent = value;
        const icon = document.getElementById("likeIcon");
        icon.className = liked ? "fa-solid fa-heart text-danger" : "fa-regular fa-heart";
    }

    function loadComments() {
        const comments = JSON.parse(localStorage.getItem(photoKey)) || [];
        document.getElementById("commentList").innerHTML = comments.map(c => `<li class="list-group-item">${c}</li>`).join('');
    }

    function submitComment() {
        const input = document.getElementById("commentText");
        if (!input.value.trim()) return;
        const comments = JSON.parse(localStorage.getItem(photoKey)) || [];
        comments.push(input.value.trim());
        localStorage.setItem(photoKey, JSON.stringify(comments));
        input.value = "";
        loadComments();
    }

    function toggleLike() {
        let likes = parseInt(localStorage.getItem(likeKey)) || 0;
        let liked = localStorage.getItem(likeKey + "-liked") === "true";

        liked ? likes-- : likes++;
        localStorage.setItem(likeKey, likes);
        localStorage.setItem(likeKey + "-liked", !liked);
        updateUI("likeCount", likes, !liked);
    }

    function sharePhoto() {
        navigator.clipboard.writeText(window.location.href).then(() => alert('Photo link copied!'));
    }

    document.addEventListener("DOMContentLoaded", () => {
        updateUI("likeCount", localStorage.getItem(likeKey) || 0, localStorage.getItem(likeKey + "-liked") === "true");
        loadComments();
    });
</script>
